Video 3, working with text streams:
Compress tar archive using tar xzf <name>.tar.gz
create new compressed archive with tar czf
Compress an uncompressed archive using gzip(there are also Bzip2, zip, and unzip)
- grep is used to filter text streams
-adding >> will stream the text to the name I append after the >>
-head - by default displays the first 10 lines of a file
-tail - the last 10 lines of a file
-cut will extract fields from specified text using -d to set the field delimiter and -f to set the field.(cut -d: -f3 /etc/group)
-sort -n will display text in ascending numeric order. -rn will do the opposite

BASH Scripting:
-Nano myscript.sh  - sh identifies it as a script
-Shebang line - #!/bin/bash - this consist with interpeter I’m gonna use. The shebang line is the absolute location of the interpreter binary file(bash).
myscript.sh example:
------------------------
#!/bin/bash
declare -I number1
declare -I number2
declare -I total
echo “What’s your favorite number? “
		read number1
echo “What’s your most hated number? “
		read number2
total=$number1*$number2
		echo “Aha! They equal “ $total
exit 0
------------------------
0 at the end indicates success
-I = integer(supposed to be Lower case)
